// Don't touch this manually, this code is generated by the SymbolsGenerator helper tool

// 4.1 Symbols
@available(iOS 16.1, macOS 13.0, tvOS 16.1, watchOS 9.1, visionOS 1.0, *)
public extension SFSymbol {
    /// 􁟄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _1Brakesignal = SFSymbol(rawValue: "1.brakesignal")

    /// 􁟐
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _1Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "1.lane")

    /// 􁟙
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _10Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "10.lane")

    /// 􁟚
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _11Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "11.lane")

    /// 􁟛
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _12Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "12.lane")

    /// 􁟅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _2Brakesignal = SFSymbol(rawValue: "2.brakesignal")

    /// 􁟑
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _2Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "2.lane")

    /// 􁟒
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _3Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "3.lane")

    /// 􁟓
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _4Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "4.lane")

    /// 􁟔
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _5Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "5.lane")

    /// 􁟕
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _6Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "6.lane")

    /// 􁟖
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _7Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "7.lane")

    /// 􁟗
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _8Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "8.lane")

    /// 􁟘
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    /// - Hindi (iOS 16.4, macOS 13.3, tvOS 16.4, watchOS 9.4)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let _9Lane = SymbolWith2Localizations<Ar_v4_2, Hi_v4_2>(rawValue: "9.lane")

    /// 􁢷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let abs = SFSymbol(rawValue: "abs")

    /// 􁟆
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let absBrakesignalSlash = SFSymbol(rawValue: "abs.brakesignal.slash")

    /// 􁢸
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let absCircle = SFSymbol(rawValue: "abs.circle")

    /// 􁢹
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let absCircleFill = SFSymbol(rawValue: "abs.circle.fill")

    /// 􁟁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    @available(iOS, introduced: 16.1, deprecated: 17.0, renamed: "automaticBrakesignal")
    @available(macOS, introduced: 13.0, deprecated: 14.0, renamed: "automaticBrakesignal")
    @available(tvOS, introduced: 16.1, deprecated: 17.0, renamed: "automaticBrakesignal")
    @available(watchOS, introduced: 9.1, deprecated: 10.0, renamed: "automaticBrakesignal")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "automaticBrakesignal")
    static let autoBrakesignal = SFSymbol(rawValue: "auto.brakesignal")

    /// 􁢧
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    @available(iOS, introduced: 16.1, deprecated: 17.0, renamed: "automaticHeadlightHighBeam")
    @available(macOS, introduced: 13.0, deprecated: 14.0, renamed: "automaticHeadlightHighBeam")
    @available(tvOS, introduced: 16.1, deprecated: 17.0, renamed: "automaticHeadlightHighBeam")
    @available(watchOS, introduced: 9.1, deprecated: 10.0, renamed: "automaticHeadlightHighBeam")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "automaticHeadlightHighBeam")
    static let autoHeadlightHighBeam = SFSymbol(rawValue: "auto.headlight.high.beam")

    /// 􁢨
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    @available(iOS, introduced: 16.1, deprecated: 17.0, renamed: "automaticHeadlightHighBeamFill")
    @available(macOS, introduced: 13.0, deprecated: 14.0, renamed: "automaticHeadlightHighBeamFill")
    @available(tvOS, introduced: 16.1, deprecated: 17.0, renamed: "automaticHeadlightHighBeamFill")
    @available(watchOS, introduced: 9.1, deprecated: 10.0, renamed: "automaticHeadlightHighBeamFill")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "automaticHeadlightHighBeamFill")
    static let autoHeadlightHighBeamFill = SFSymbol(rawValue: "auto.headlight.high.beam.fill")

    /// 􁢩
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    @available(iOS, introduced: 16.1, deprecated: 17.0, renamed: "automaticHeadlightLowBeam")
    @available(macOS, introduced: 13.0, deprecated: 14.0, renamed: "automaticHeadlightLowBeam")
    @available(tvOS, introduced: 16.1, deprecated: 17.0, renamed: "automaticHeadlightLowBeam")
    @available(watchOS, introduced: 9.1, deprecated: 10.0, renamed: "automaticHeadlightLowBeam")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "automaticHeadlightLowBeam")
    static let autoHeadlightLowBeam = SFSymbol(rawValue: "auto.headlight.low.beam")

    /// 􁢪
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    @available(iOS, introduced: 16.1, deprecated: 17.0, renamed: "automaticHeadlightLowBeamFill")
    @available(macOS, introduced: 13.0, deprecated: 14.0, renamed: "automaticHeadlightLowBeamFill")
    @available(tvOS, introduced: 16.1, deprecated: 17.0, renamed: "automaticHeadlightLowBeamFill")
    @available(watchOS, introduced: 9.1, deprecated: 10.0, renamed: "automaticHeadlightLowBeamFill")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "automaticHeadlightLowBeamFill")
    static let autoHeadlightLowBeamFill = SFSymbol(rawValue: "auto.headlight.low.beam.fill")

    /// 􁉢
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let autostartstop = SFSymbol(rawValue: "autostartstop")

    /// 􁉣
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let autostartstopSlash = SFSymbol(rawValue: "autostartstop.slash")

    /// 􁊀
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let autostartstopTrianglebadgeExclamationmark = SFSymbol(rawValue: "autostartstop.trianglebadge.exclamationmark")

    /// 􁢚
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    @available(iOS, introduced: 16.1, deprecated: 16.4, renamed: "axle2")
    @available(macOS, introduced: 13.0, deprecated: 13.3, renamed: "axle2")
    @available(tvOS, introduced: 16.1, deprecated: 16.4, renamed: "axle2")
    @available(watchOS, introduced: 9.1, deprecated: 9.4, renamed: "axle2")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "axle2")
    static let axel2 = SFSymbol(rawValue: "axel.2")

    /// 􁠡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    @available(iOS, introduced: 16.1, deprecated: 16.4, renamed: "axle2FrontAndRearEngaged")
    @available(macOS, introduced: 13.0, deprecated: 13.3, renamed: "axle2FrontAndRearEngaged")
    @available(tvOS, introduced: 16.1, deprecated: 16.4, renamed: "axle2FrontAndRearEngaged")
    @available(watchOS, introduced: 9.1, deprecated: 9.4, renamed: "axle2FrontAndRearEngaged")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "axle2FrontAndRearEngaged")
    static let axel2FrontAndRearEngaged = SFSymbol(rawValue: "axel.2.front.and.rear.engaged")

    /// 􁠟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    @available(iOS, introduced: 16.1, deprecated: 16.4, renamed: "axle2FrontEngaged")
    @available(macOS, introduced: 13.0, deprecated: 13.3, renamed: "axle2FrontEngaged")
    @available(tvOS, introduced: 16.1, deprecated: 16.4, renamed: "axle2FrontEngaged")
    @available(watchOS, introduced: 9.1, deprecated: 9.4, renamed: "axle2FrontEngaged")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "axle2FrontEngaged")
    static let axel2FrontEngaged = SFSymbol(rawValue: "axel.2.front.engaged")

    /// 􁠠
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    @available(iOS, introduced: 16.1, deprecated: 16.4, renamed: "axle2RearEngaged")
    @available(macOS, introduced: 13.0, deprecated: 13.3, renamed: "axle2RearEngaged")
    @available(tvOS, introduced: 16.1, deprecated: 16.4, renamed: "axle2RearEngaged")
    @available(watchOS, introduced: 9.1, deprecated: 9.4, renamed: "axle2RearEngaged")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "axle2RearEngaged")
    static let axel2RearEngaged = SFSymbol(rawValue: "axel.2.rear.engaged")

    /// 􁝺
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let backpackCircle = SFSymbol(rawValue: "backpack.circle")

    /// 􁝻
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let backpackCircleFill = SFSymbol(rawValue: "backpack.circle.fill")

    /// 􁠷
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let batteryblock = SFSymbol(rawValue: "batteryblock")

    /// 􁠸
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let batteryblockFill = SFSymbol(rawValue: "batteryblock.fill")

    /// 􁠵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let batteryblockSlash = SFSymbol(rawValue: "batteryblock.slash")

    /// 􁠶
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let batteryblockSlashFill = SFSymbol(rawValue: "batteryblock.slash.fill")

    /// 􁝱
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let boltTrianglebadgeExclamationmark = SFSymbol(rawValue: "bolt.trianglebadge.exclamationmark")

    /// 􁝲
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let boltTrianglebadgeExclamationmarkFill = SFSymbol(rawValue: "bolt.trianglebadge.exclamationmark.fill")

    /// 􁢱
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carFrontWavesUp = SFSymbol(rawValue: "car.front.waves.up")

    /// 􁢲
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carFrontWavesUpFill = SFSymbol(rawValue: "car.front.waves.up.fill")

    /// 􀽛
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let carRear = SFSymbol(rawValue: "car.rear")

    /// 􀿈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carRearAndTireMarks = SFSymbol(rawValue: "car.rear.and.tire.marks")

    /// 􁢦
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carRearAndTireMarksSlash = SFSymbol(rawValue: "car.rear.and.tire.marks.slash")

    /// 􀽜
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let carRearFill = SFSymbol(rawValue: "car.rear.fill")

    /// 􁕿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLane = SFSymbol(rawValue: "car.rear.road.lane")

    /// 􁕸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carRearRoadLaneDashed = SFSymbol(rawValue: "car.rear.road.lane.dashed")

    /// 􁖝
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carRearWavesUp = SFSymbol(rawValue: "car.rear.waves.up")

    /// 􁖞
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carRearWavesUpFill = SFSymbol(rawValue: "car.rear.waves.up.fill")

    /// 􁎷
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let carSide = SFSymbol(rawValue: "car.side")

    /// 􁉬
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideAirCirculate = SFSymbol(rawValue: "car.side.air.circulate")

    /// 􁉭
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carSideAirCirculateFill = SFSymbol(rawValue: "car.side.air.circulate.fill")

    /// 􁉮
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideAirFresh = SFSymbol(rawValue: "car.side.air.fresh")

    /// 􁉯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideAirFreshFill = SFSymbol(rawValue: "car.side.air.fresh.fill")

    /// 􁉪
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carSideAndExclamationmark = SFSymbol(rawValue: "car.side.and.exclamationmark")

    /// 􁠅
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carSideAndExclamationmarkFill = SFSymbol(rawValue: "car.side.and.exclamationmark.fill")

    /// 􁠋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideArrowtriangleDown = SFSymbol(rawValue: "car.side.arrowtriangle.down")

    /// 􁠌
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideArrowtriangleDownFill = SFSymbol(rawValue: "car.side.arrowtriangle.down.fill")

    /// 􁠉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideArrowtriangleUp = SFSymbol(rawValue: "car.side.arrowtriangle.up")

    /// 􁠇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carSideArrowtriangleUpArrowtriangleDown = SFSymbol(rawValue: "car.side.arrowtriangle.up.arrowtriangle.down")

    /// 􁠈
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carSideArrowtriangleUpArrowtriangleDownFill = SFSymbol(rawValue: "car.side.arrowtriangle.up.arrowtriangle.down.fill")

    /// 􁠊
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carSideArrowtriangleUpFill = SFSymbol(rawValue: "car.side.arrowtriangle.up.fill")

    /// 􁎸
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let carSideFill = SFSymbol(rawValue: "car.side.fill")

    /// 􁉤
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carSideFrontOpen = SFSymbol(rawValue: "car.side.front.open")

    /// 􁉥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carSideFrontOpenFill = SFSymbol(rawValue: "car.side.front.open.fill")

    /// 􁉦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carSideRearOpen = SFSymbol(rawValue: "car.side.rear.open")

    /// 􁉧
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carSideRearOpenFill = SFSymbol(rawValue: "car.side.rear.open.fill")

    /// 􁀐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndFrontRightAndRearLeftAndRearRightOpen = SFSymbol(rawValue: "car.top.door.front.left.and.front.right.and.rear.left.and.rear.right.open")

    /// 􁀑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndFrontRightAndRearLeftAndRearRightOpenFill = SFSymbol(rawValue: "car.top.door.front.left.and.front.right.and.rear.left.and.rear.right.open.fill")

    /// 􁡜
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndFrontRightAndRearLeftOpen = SFSymbol(rawValue: "car.top.door.front.left.and.front.right.and.rear.left.open")

    /// 􁡝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndFrontRightAndRearLeftOpenFill = SFSymbol(rawValue: "car.top.door.front.left.and.front.right.and.rear.left.open.fill")

    /// 􁡞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndFrontRightAndRearRightOpen = SFSymbol(rawValue: "car.top.door.front.left.and.front.right.and.rear.right.open")

    /// 􁡟
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndFrontRightAndRearRightOpenFill = SFSymbol(rawValue: "car.top.door.front.left.and.front.right.and.rear.right.open.fill")

    /// 􁡐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndFrontRightOpen = SFSymbol(rawValue: "car.top.door.front.left.and.front.right.open")

    /// 􁡑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndFrontRightOpenFill = SFSymbol(rawValue: "car.top.door.front.left.and.front.right.open.fill")

    /// 􁡠
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndRearLeftAndRearRightOpen = SFSymbol(rawValue: "car.top.door.front.left.and.rear.left.and.rear.right.open")

    /// 􁡡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndRearLeftAndRearRightOpenFill = SFSymbol(rawValue: "car.top.door.front.left.and.rear.left.and.rear.right.open.fill")

    /// 􁡔
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndRearLeftOpen = SFSymbol(rawValue: "car.top.door.front.left.and.rear.left.open")

    /// 􁡕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndRearLeftOpenFill = SFSymbol(rawValue: "car.top.door.front.left.and.rear.left.open.fill")

    /// 􁡘
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndRearRightOpen = SFSymbol(rawValue: "car.top.door.front.left.and.rear.right.open")

    /// 􁡙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftAndRearRightOpenFill = SFSymbol(rawValue: "car.top.door.front.left.and.rear.right.open.fill")

    /// 􀿂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftOpen = SFSymbol(rawValue: "car.top.door.front.left.open")

    /// 􀿃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontLeftOpenFill = SFSymbol(rawValue: "car.top.door.front.left.open.fill")

    /// 􁡢
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontRightAndRearLeftAndRearRightOpen = SFSymbol(rawValue: "car.top.door.front.right.and.rear.left.and.rear.right.open")

    /// 􁡣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontRightAndRearLeftAndRearRightOpenFill = SFSymbol(rawValue: "car.top.door.front.right.and.rear.left.and.rear.right.open.fill")

    /// 􁡚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontRightAndRearLeftOpen = SFSymbol(rawValue: "car.top.door.front.right.and.rear.left.open")

    /// 􁡛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontRightAndRearLeftOpenFill = SFSymbol(rawValue: "car.top.door.front.right.and.rear.left.open.fill")

    /// 􁡖
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontRightAndRearRightOpen = SFSymbol(rawValue: "car.top.door.front.right.and.rear.right.open")

    /// 􁡗
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontRightAndRearRightOpenFill = SFSymbol(rawValue: "car.top.door.front.right.and.rear.right.open.fill")

    /// 􁡊
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontRightOpen = SFSymbol(rawValue: "car.top.door.front.right.open")

    /// 􁡋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorFrontRightOpenFill = SFSymbol(rawValue: "car.top.door.front.right.open.fill")

    /// 􁡒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorRearLeftAndRearRightOpen = SFSymbol(rawValue: "car.top.door.rear.left.and.rear.right.open")

    /// 􁡓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorRearLeftAndRearRightOpenFill = SFSymbol(rawValue: "car.top.door.rear.left.and.rear.right.open.fill")

    /// 􁡌
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorRearLeftOpen = SFSymbol(rawValue: "car.top.door.rear.left.open")

    /// 􁡍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorRearLeftOpenFill = SFSymbol(rawValue: "car.top.door.rear.left.open.fill")

    /// 􁡎
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorRearRightOpen = SFSymbol(rawValue: "car.top.door.rear.right.open")

    /// 􁡏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let carTopDoorRearRightOpenFill = SFSymbol(rawValue: "car.top.door.rear.right.open.fill")

    /// 􁕾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopLaneDashedArrowtriangleInward = SFSymbol(rawValue: "car.top.lane.dashed.arrowtriangle.inward")

    /// 􁖃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopLaneDashedArrowtriangleInwardFill = SFSymbol(rawValue: "car.top.lane.dashed.arrowtriangle.inward.fill")

    /// 􁖄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopLaneDashedBadgeSteeringwheel = SFSymbol(rawValue: "car.top.lane.dashed.badge.steeringwheel")

    /// 􁖅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let carTopLaneDashedBadgeSteeringwheelFill = SFSymbol(rawValue: "car.top.lane.dashed.badge.steeringwheel.fill")

    /// 􁢯
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopLaneDashedDepartureLeft = SFSymbol(rawValue: "car.top.lane.dashed.departure.left")

    /// 􁢰
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopLaneDashedDepartureLeftFill = SFSymbol(rawValue: "car.top.lane.dashed.departure.left.fill")

    /// 􁕼
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopLaneDashedDepartureRight = SFSymbol(rawValue: "car.top.lane.dashed.departure.right")

    /// 􁕽
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopLaneDashedDepartureRightFill = SFSymbol(rawValue: "car.top.lane.dashed.departure.right.fill")

    /// 􁖵
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopRadiowavesFront = SFSymbol(rawValue: "car.top.radiowaves.front")

    /// 􁖹
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopRadiowavesFrontFill = SFSymbol(rawValue: "car.top.radiowaves.front.fill")

    /// 􁖶
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopRadiowavesRear = SFSymbol(rawValue: "car.top.radiowaves.rear")

    /// 􁖺
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopRadiowavesRearFill = SFSymbol(rawValue: "car.top.radiowaves.rear.fill")

    /// 􁖴
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopRadiowavesRearLeft = SFSymbol(rawValue: "car.top.radiowaves.rear.left")

    /// 􁢠
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopRadiowavesRearLeftAndRearRight = SFSymbol(rawValue: "car.top.radiowaves.rear.left.and.rear.right")

    /// 􁢡
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopRadiowavesRearLeftAndRearRightFill = SFSymbol(rawValue: "car.top.radiowaves.rear.left.and.rear.right.fill")

    /// 􁖸
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopRadiowavesRearLeftFill = SFSymbol(rawValue: "car.top.radiowaves.rear.left.fill")

    /// 􁖳
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopRadiowavesRearRight = SFSymbol(rawValue: "car.top.radiowaves.rear.right")

    /// 􁖷
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let carTopRadiowavesRearRightFill = SFSymbol(rawValue: "car.top.radiowaves.rear.right.fill")

    /// 􁣃
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let chartDotsScatter = SFSymbol(rawValue: "chart.dots.scatter")

    /// 􁝾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let crossCaseCircle = SFSymbol(rawValue: "cross.case.circle")

    /// 􁝿
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let crossCaseCircleFill = SFSymbol(rawValue: "cross.case.circle.fill")

    /// 􁢏
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let ellipsisViewfinder = SFSymbol(rawValue: "ellipsis.viewfinder")

    /// 􀾰
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let engineCombustion = SFSymbol(rawValue: "engine.combustion")

    /// 􀾱
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let engineCombustionFill = SFSymbol(rawValue: "engine.combustion.fill")

    /// 􀿁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let exclamationmarkTransmission = SFSymbol(rawValue: "exclamationmark.transmission")

    /// 􁟺
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureRunSquareStack = SFSymbol(rawValue: "figure.run.square.stack")

    /// 􁟻
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let figureRunSquareStackFill = SFSymbol(rawValue: "figure.run.square.stack.fill")

    /// 􀿦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let figureSeatedSeatbelt = SFSymbol(rawValue: "figure.seated.seatbelt")

    /// 􁊂
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let figureSeatedSeatbeltAndAirbagOff = SFSymbol(rawValue: "figure.seated.seatbelt.and.airbag.off")

    /// 􁞛
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let figureSeatedSeatbeltAndAirbagOn = SFSymbol(rawValue: "figure.seated.seatbelt.and.airbag.on")

    /// 􁁶
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    @available(iOS, introduced: 16.1, deprecated: 17.0, renamed: "figureSeatedSideAirDistributionLower")
    @available(macOS, introduced: 13.0, deprecated: 14.0, renamed: "figureSeatedSideAirDistributionLower")
    @available(tvOS, introduced: 16.1, deprecated: 17.0, renamed: "figureSeatedSideAirDistributionLower")
    @available(watchOS, introduced: 9.1, deprecated: 10.0, renamed: "figureSeatedSideAirDistributionLower")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "figureSeatedSideAirDistributionLower")
    static let figureSeatedSideAirLower = SFSymbol(rawValue: "figure.seated.side.air.lower")

    /// 􁁵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    @available(iOS, introduced: 16.1, deprecated: 17.0, renamed: "figureSeatedSideAirDistributionMiddle")
    @available(macOS, introduced: 13.0, deprecated: 14.0, renamed: "figureSeatedSideAirDistributionMiddle")
    @available(tvOS, introduced: 16.1, deprecated: 17.0, renamed: "figureSeatedSideAirDistributionMiddle")
    @available(watchOS, introduced: 9.1, deprecated: 10.0, renamed: "figureSeatedSideAirDistributionMiddle")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "figureSeatedSideAirDistributionMiddle")
    static let figureSeatedSideAirUpper = SFSymbol(rawValue: "figure.seated.side.air.upper")

    /// 􁁸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    @available(iOS, introduced: 16.1, deprecated: 17.0, renamed: "figureSeatedSideAirDistributionMiddleAndLower")
    @available(macOS, introduced: 13.0, deprecated: 14.0, renamed: "figureSeatedSideAirDistributionMiddleAndLower")
    @available(tvOS, introduced: 16.1, deprecated: 17.0, renamed: "figureSeatedSideAirDistributionMiddleAndLower")
    @available(watchOS, introduced: 9.1, deprecated: 10.0, renamed: "figureSeatedSideAirDistributionMiddleAndLower")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "figureSeatedSideAirDistributionMiddleAndLower")
    static let figureSeatedSideAirUpperAndLower = SFSymbol(rawValue: "figure.seated.side.air.upper.and.lower")

    /// 􁁷
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    @available(iOS, introduced: 16.1, deprecated: 17.0, renamed: "figureSeatedSideAirDistributionUpper")
    @available(macOS, introduced: 13.0, deprecated: 14.0, renamed: "figureSeatedSideAirDistributionUpper")
    @available(tvOS, introduced: 16.1, deprecated: 17.0, renamed: "figureSeatedSideAirDistributionUpper")
    @available(watchOS, introduced: 9.1, deprecated: 10.0, renamed: "figureSeatedSideAirDistributionUpper")
    @available(visionOS, introduced: 1.0, deprecated: 1.0, renamed: "figureSeatedSideAirDistributionUpper")
    static let figureSeatedSideAirWindshield = SFSymbol(rawValue: "figure.seated.side.air.windshield")

    /// 􁊍
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let figureSeatedSideAirbagOff = SFSymbol(rawValue: "figure.seated.side.airbag.off")

    /// 􁉻
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let figureSeatedSideAirbagOff2 = SFSymbol(rawValue: "figure.seated.side.airbag.off.2")

    /// 􀿧
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let figureSeatedSideAirbagOn = SFSymbol(rawValue: "figure.seated.side.airbag.on")

    /// 􁞚
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let figureSeatedSideAirbagOn2 = SFSymbol(rawValue: "figure.seated.side.airbag.on.2")

    /// 􁁹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let figureSeatedSideWindshieldFrontAndHeatWaves = SFSymbol(rawValue: "figure.seated.side.windshield.front.and.heat.waves")

    /// 􁞱
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let fishCircle = SFSymbol(rawValue: "fish.circle")

    /// 􁞲
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let fishCircleFill = SFSymbol(rawValue: "fish.circle.fill")

    /// 􁝼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let flagCheckeredCircle = SFSymbol(rawValue: "flag.checkered.circle")

    /// 􁝽
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let flagCheckeredCircleFill = SFSymbol(rawValue: "flag.checkered.circle.fill")

    /// 􁠴
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let fluidTransmission = SFSymbol(rawValue: "fluid.transmission")

    /// 􁀱
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let glowplug = SFSymbol(rawValue: "glowplug")

    /// 􁝌
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let handRaisedApp = SFSymbol(rawValue: "hand.raised.app")

    /// 􁝍
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let handRaisedAppFill = SFSymbol(rawValue: "hand.raised.app.fill")

    /// 􁟂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let handRaisedBrakesignal = SFSymbol(rawValue: "hand.raised.brakesignal")

    /// 􁟃
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let handRaisedBrakesignalSlash = SFSymbol(rawValue: "hand.raised.brakesignal.slash")

    /// 􁞸
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let handbag = SFSymbol(rawValue: "handbag")

    /// 􁞹
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let handbagFill = SFSymbol(rawValue: "handbag.fill")

    /// 􁀰
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hazardsign = SFSymbol(rawValue: "hazardsign")

    /// 􁕣
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let hazardsignFill = SFSymbol(rawValue: "hazardsign.fill")

    /// 􀾺
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let headlightDaytime = SFSymbol(rawValue: "headlight.daytime")

    /// 􀾻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let headlightDaytimeFill = SFSymbol(rawValue: "headlight.daytime.fill")

    /// 􀾶
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let headlightFog = SFSymbol(rawValue: "headlight.fog")

    /// 􀾷
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let headlightFogFill = SFSymbol(rawValue: "headlight.fog.fill")

    /// 􁟉
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let heatElementWindshield = SFSymbol(rawValue: "heat.element.windshield")

    /// 􁘱
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let houseAndFlag = SFSymbol(rawValue: "house.and.flag")

    /// 􁞈
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let houseAndFlagCircle = SFSymbol(rawValue: "house.and.flag.circle")

    /// 􁞉
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let houseAndFlagCircleFill = SFSymbol(rawValue: "house.and.flag.circle.fill")

    /// 􁘲
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let houseAndFlagFill = SFSymbol(rawValue: "house.and.flag.fill")

    /// 􁘭
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let houseLodge = SFSymbol(rawValue: "house.lodge")

    /// 􁞆
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let houseLodgeCircle = SFSymbol(rawValue: "house.lodge.circle")

    /// 􁞇
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let houseLodgeCircleFill = SFSymbol(rawValue: "house.lodge.circle.fill")

    /// 􁘮
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let houseLodgeFill = SFSymbol(rawValue: "house.lodge.fill")

    /// 􁟊
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let infoWindshield = SFSymbol(rawValue: "info.windshield")

    /// 􁋟
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad and iPhone.
    static let ipadAndIphoneSlash = SFSymbol(rawValue: "ipad.and.iphone.slash")

    /// 􀟟
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen1 = SFSymbol(rawValue: "ipad.gen1")

    /// 􀴒
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen1BadgePlay = SFSymbol(rawValue: "ipad.gen1.badge.play")

    /// 􀥓
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen1Landscape = SFSymbol(rawValue: "ipad.gen1.landscape")

    /// 􀵑
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen1LandscapeBadgePlay = SFSymbol(rawValue: "ipad.gen1.landscape.badge.play")

    /// 􁟧
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen2 = SFSymbol(rawValue: "ipad.gen2")

    /// 􁟨
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen2BadgePlay = SFSymbol(rawValue: "ipad.gen2.badge.play")

    /// 􁟩
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen2Landscape = SFSymbol(rawValue: "ipad.gen2.landscape")

    /// 􁟪
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadGen2LandscapeBadgePlay = SFSymbol(rawValue: "ipad.gen2.landscape.badge.play")

    /// 􀟝
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1 = SFSymbol(rawValue: "iphone.gen1")

    /// 􀐶
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1BadgePlay = SFSymbol(rawValue: "iphone.gen1.badge.play")

    /// 􁄥
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1Circle = SFSymbol(rawValue: "iphone.gen1.circle")

    /// 􁄦
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1CircleFill = SFSymbol(rawValue: "iphone.gen1.circle.fill")

    /// 􀴎
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1Landscape = SFSymbol(rawValue: "iphone.gen1.landscape")

    /// 􀡆
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1RadiowavesLeftAndRight = SFSymbol(rawValue: "iphone.gen1.radiowaves.left.and.right")

    /// 􁅚
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1RadiowavesLeftAndRightCircle = SFSymbol(rawValue: "iphone.gen1.radiowaves.left.and.right.circle")

    /// 􁅛
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1RadiowavesLeftAndRightCircleFill = SFSymbol(rawValue: "iphone.gen1.radiowaves.left.and.right.circle.fill")

    /// 􀨴
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1Slash = SFSymbol(rawValue: "iphone.gen1.slash")

    /// 􁄧
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1SlashCircle = SFSymbol(rawValue: "iphone.gen1.slash.circle")

    /// 􁄨
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen1SlashCircleFill = SFSymbol(rawValue: "iphone.gen1.slash.circle.fill")

    /// 􁟜
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2 = SFSymbol(rawValue: "iphone.gen2")

    /// 􁟦
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2BadgePlay = SFSymbol(rawValue: "iphone.gen2.badge.play")

    /// 􁟝
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2Circle = SFSymbol(rawValue: "iphone.gen2.circle")

    /// 􁟞
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2CircleFill = SFSymbol(rawValue: "iphone.gen2.circle.fill")

    /// 􁟟
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2Landscape = SFSymbol(rawValue: "iphone.gen2.landscape")

    /// 􁟠
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2RadiowavesLeftAndRight = SFSymbol(rawValue: "iphone.gen2.radiowaves.left.and.right")

    /// 􁟡
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2RadiowavesLeftAndRightCircle = SFSymbol(rawValue: "iphone.gen2.radiowaves.left.and.right.circle")

    /// 􁟢
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2RadiowavesLeftAndRightCircleFill = SFSymbol(rawValue: "iphone.gen2.radiowaves.left.and.right.circle.fill")

    /// 􁟣
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2Slash = SFSymbol(rawValue: "iphone.gen2.slash")

    /// 􁟤
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2SlashCircle = SFSymbol(rawValue: "iphone.gen2.slash.circle")

    /// 􁟥
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen2SlashCircleFill = SFSymbol(rawValue: "iphone.gen2.slash.circle.fill")

    /// 􁊮
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3 = SFSymbol(rawValue: "iphone.gen3")

    /// 􁊸
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3BadgePlay = SFSymbol(rawValue: "iphone.gen3.badge.play")

    /// 􁊯
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3Circle = SFSymbol(rawValue: "iphone.gen3.circle")

    /// 􁊰
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3CircleFill = SFSymbol(rawValue: "iphone.gen3.circle.fill")

    /// 􁊱
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3Landscape = SFSymbol(rawValue: "iphone.gen3.landscape")

    /// 􁊲
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3RadiowavesLeftAndRight = SFSymbol(rawValue: "iphone.gen3.radiowaves.left.and.right")

    /// 􁊳
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3RadiowavesLeftAndRightCircle = SFSymbol(rawValue: "iphone.gen3.radiowaves.left.and.right.circle")

    /// 􁊴
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3RadiowavesLeftAndRightCircleFill = SFSymbol(rawValue: "iphone.gen3.radiowaves.left.and.right.circle.fill")

    /// 􁊵
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3Slash = SFSymbol(rawValue: "iphone.gen3.slash")

    /// 􁊶
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3SlashCircle = SFSymbol(rawValue: "iphone.gen3.slash.circle")

    /// 􁊷
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneGen3SlashCircleFill = SFSymbol(rawValue: "iphone.gen3.slash.circle.fill")

    /// 􁠱
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let keyHorizontal = SFSymbol(rawValue: "key.horizontal")

    /// 􁠲
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let keyHorizontalFill = SFSymbol(rawValue: "key.horizontal.fill")

    /// 􁠯
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let keyRadiowavesForward = SFSymbol(rawValue: "key.radiowaves.forward")

    /// 􁠰
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let keyRadiowavesForwardFill = SFSymbol(rawValue: "key.radiowaves.forward.fill")

    /// 􁢽
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let kph = SFSymbol(rawValue: "kph")

    /// 􁢾
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let kphCircle = SFSymbol(rawValue: "kph.circle")

    /// 􁢿
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let kphCircleFill = SFSymbol(rawValue: "kph.circle.fill")

    /// 􁟏
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let lane = SFSymbol(rawValue: "lane")

    /// 􁊭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let laptopcomputerSlash = SFSymbol(rawValue: "laptopcomputer.slash")

    /// 􁋋
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let lightOverheadLeft = SFSymbol(rawValue: "light.overhead.left")

    /// 􁣇
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let lightOverheadLeftFill = SFSymbol(rawValue: "light.overhead.left.fill")

    /// 􁋊
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let lightOverheadRight = SFSymbol(rawValue: "light.overhead.right")

    /// 􁣆
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let lightOverheadRightFill = SFSymbol(rawValue: "light.overhead.right.fill")

    /// 􀑚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let lockOpenRotation = SFSymbol(rawValue: "lock.open.rotation")

    /// 􁘞
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let macbookAndIpad = SFSymbol(rawValue: "macbook.and.ipad")

    /// 􀬩
    /// Single Localization, 3 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let macbookAndIphone = SFSymbol(rawValue: "macbook.and.iphone")

    /// 􁠄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let minusPlusAndFluidBatteryblock = SFSymbol(rawValue: "minus.plus.and.fluid.batteryblock")

    /// 􁠿
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let minusPlusBatteryblockExclamationmark = SFSymbol(rawValue: "minus.plus.batteryblock.exclamationmark")

    /// 􁡀
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let minusPlusBatteryblockExclamationmarkFill = SFSymbol(rawValue: "minus.plus.batteryblock.exclamationmark.fill")

    /// 􁠹
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let minusPlusBatteryblockSlash = SFSymbol(rawValue: "minus.plus.batteryblock.slash")

    /// 􁠺
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let minusPlusBatteryblockSlashFill = SFSymbol(rawValue: "minus.plus.batteryblock.slash.fill")

    /// 􁡁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let minusPlusBatteryblockStack = SFSymbol(rawValue: "minus.plus.batteryblock.stack")

    /// 􁡃
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let minusPlusBatteryblockStackExclamationmark = SFSymbol(rawValue: "minus.plus.batteryblock.stack.exclamationmark")

    /// 􁡄
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let minusPlusBatteryblockStackExclamationmarkFill = SFSymbol(rawValue: "minus.plus.batteryblock.stack.exclamationmark.fill")

    /// 􁡂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let minusPlusBatteryblockStackFill = SFSymbol(rawValue: "minus.plus.batteryblock.stack.fill")

    /// 􁉵
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let mirrorSideLeftAndArrowTurnDownRight = SFSymbol(rawValue: "mirror.side.left.and.arrow.turn.down.right")

    /// 􁉳
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let mirrorSideLeftAndHeatWaves = SFSymbol(rawValue: "mirror.side.left.and.heat.waves")

    /// 􁉶
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let mirrorSideRightAndArrowTurnDownLeft = SFSymbol(rawValue: "mirror.side.right.and.arrow.turn.down.left")

    /// 􁉴
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let mirrorSideRightAndHeatWaves = SFSymbol(rawValue: "mirror.side.right.and.heat.waves")

    /// 􁗝
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let mountain2 = SFSymbol(rawValue: "mountain.2")

    /// 􁞒
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let mountain2Circle = SFSymbol(rawValue: "mountain.2.circle")

    /// 􁞓
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let mountain2CircleFill = SFSymbol(rawValue: "mountain.2.circle.fill")

    /// 􁗞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let mountain2Fill = SFSymbol(rawValue: "mountain.2.fill")

    /// 􁢺
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let mph = SFSymbol(rawValue: "mph")

    /// 􁢻
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let mphCircle = SFSymbol(rawValue: "mph.circle")

    /// 􁢼
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let mphCircleFill = SFSymbol(rawValue: "mph.circle.fill")

    /// 􁞴
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let mug = SFSymbol(rawValue: "mug")

    /// 􁞵
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let mugFill = SFSymbol(rawValue: "mug.fill")

    /// 􀿄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let oilcan = SFSymbol(rawValue: "oilcan")

    /// 􀿅
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let oilcanFill = SFSymbol(rawValue: "oilcan.fill")

    /// 􁞮
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let personCropCircleDashed = SFSymbol(rawValue: "person.crop.circle.dashed")

    /// 􁟼
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let playSquareStack = SFSymbol(rawValue: "play.square.stack")

    /// 􁟽
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let playSquareStackFill = SFSymbol(rawValue: "play.square.stack.fill")

    /// 􁠳
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let questionmarkKeyFilled = SFSymbol(rawValue: "questionmark.key.filled")

    /// 􁟇
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let retarderBrakesignal = SFSymbol(rawValue: "retarder.brakesignal")

    /// 􁕶
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let roadLaneArrowtriangle2Inward = SFSymbol(rawValue: "road.lane.arrowtriangle.2.inward")

    /// 􁞘
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let sailboatCircle = SFSymbol(rawValue: "sailboat.circle")

    /// 􁞙
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let sailboatCircleFill = SFSymbol(rawValue: "sailboat.circle.fill")

    /// 􁝳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let signpostAndArrowtriangleUp = SFSymbol(rawValue: "signpost.and.arrowtriangle.up")

    /// 􁞐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let signpostAndArrowtriangleUpCircle = SFSymbol(rawValue: "signpost.and.arrowtriangle.up.circle")

    /// 􁞑
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let signpostAndArrowtriangleUpCircleFill = SFSymbol(rawValue: "signpost.and.arrowtriangle.up.circle.fill")

    /// 􁝴
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let signpostAndArrowtriangleUpFill = SFSymbol(rawValue: "signpost.and.arrowtriangle.up.fill")

    /// 􁞊
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let signpostLeftCircle = SFSymbol(rawValue: "signpost.left.circle")

    /// 􁞋
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let signpostLeftCircleFill = SFSymbol(rawValue: "signpost.left.circle.fill")

    /// 􁝮
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let signpostRightAndLeft = SFSymbol(rawValue: "signpost.right.and.left")

    /// 􁞎
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let signpostRightAndLeftCircle = SFSymbol(rawValue: "signpost.right.and.left.circle")

    /// 􁞏
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let signpostRightAndLeftCircleFill = SFSymbol(rawValue: "signpost.right.and.left.circle.fill")

    /// 􁝭
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let signpostRightAndLeftFill = SFSymbol(rawValue: "signpost.right.and.left.fill")

    /// 􁞌
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let signpostRightCircle = SFSymbol(rawValue: "signpost.right.circle")

    /// 􁞍
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let signpostRightCircleFill = SFSymbol(rawValue: "signpost.right.circle.fill")

    /// 􁕹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let snowflakeRoadLane = SFSymbol(rawValue: "snowflake.road.lane")

    /// 􁖀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let snowflakeRoadLaneDashed = SFSymbol(rawValue: "snowflake.road.lane.dashed")

    /// 􁠂
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let snowflakeSlash = SFSymbol(rawValue: "snowflake.slash")

    /// 􀜥
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let sos = SFSymbol(rawValue: "sos")

    /// 􁞪
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let sosCircle = SFSymbol(rawValue: "sos.circle")

    /// 􁞫
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let sosCircleFill = SFSymbol(rawValue: "sos.circle.fill")

    /// 􁂩
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let steeringwheel = SFSymbol(rawValue: "steeringwheel")

    /// 􁉙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let steeringwheelAndHeatWaves = SFSymbol(rawValue: "steeringwheel.and.heat.waves")

    /// 􁞿
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let steeringwheelAndKey = SFSymbol(rawValue: "steeringwheel.and.key")

    /// 􁟀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let steeringwheelAndLock = SFSymbol(rawValue: "steeringwheel.and.lock")

    /// 􁉚
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let steeringwheelExclamationmark = SFSymbol(rawValue: "steeringwheel.exclamationmark")

    /// 􁖥
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let steeringwheelRoadLane = SFSymbol(rawValue: "steeringwheel.road.lane")

    /// 􁖦
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let steeringwheelRoadLaneDashed = SFSymbol(rawValue: "steeringwheel.road.lane.dashed")

    /// 􁡉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let steeringwheelSlash = SFSymbol(rawValue: "steeringwheel.slash")

    /// 􁞖
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let stroller = SFSymbol(rawValue: "stroller")

    /// 􁞗
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let strollerFill = SFSymbol(rawValue: "stroller.fill")

    /// 􁞯
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let suitcaseRolling = SFSymbol(rawValue: "suitcase.rolling")

    /// 􁞰
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let suitcaseRollingFill = SFSymbol(rawValue: "suitcase.rolling.fill")

    /// 􁠀
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let suvSide = SFSymbol(rawValue: "suv.side")

    /// 􁠑
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideAirCirculate = SFSymbol(rawValue: "suv.side.air.circulate")

    /// 􁠒
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let suvSideAirCirculateFill = SFSymbol(rawValue: "suv.side.air.circulate.fill")

    /// 􁠓
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideAirFresh = SFSymbol(rawValue: "suv.side.air.fresh")

    /// 􁠔
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideAirFreshFill = SFSymbol(rawValue: "suv.side.air.fresh.fill")

    /// 􁠕
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let suvSideAndExclamationmark = SFSymbol(rawValue: "suv.side.and.exclamationmark")

    /// 􁠖
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let suvSideAndExclamationmarkFill = SFSymbol(rawValue: "suv.side.and.exclamationmark.fill")

    /// 􁠝
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideArrowtriangleDown = SFSymbol(rawValue: "suv.side.arrowtriangle.down")

    /// 􁠞
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideArrowtriangleDownFill = SFSymbol(rawValue: "suv.side.arrowtriangle.down.fill")

    /// 􁠛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideArrowtriangleUp = SFSymbol(rawValue: "suv.side.arrowtriangle.up")

    /// 􁠙
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let suvSideArrowtriangleUpArrowtriangleDown = SFSymbol(rawValue: "suv.side.arrowtriangle.up.arrowtriangle.down")

    /// 􁠚
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let suvSideArrowtriangleUpArrowtriangleDownFill = SFSymbol(rawValue: "suv.side.arrowtriangle.up.arrowtriangle.down.fill")

    /// 􁠜
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let suvSideArrowtriangleUpFill = SFSymbol(rawValue: "suv.side.arrowtriangle.up.fill")

    /// 􁠁
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let suvSideFill = SFSymbol(rawValue: "suv.side.fill")

    /// 􁠍
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let suvSideFrontOpen = SFSymbol(rawValue: "suv.side.front.open")

    /// 􁠎
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let suvSideFrontOpenFill = SFSymbol(rawValue: "suv.side.front.open.fill")

    /// 􁠏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let suvSideRearOpen = SFSymbol(rawValue: "suv.side.rear.open")

    /// 􁠐
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let suvSideRearOpenFill = SFSymbol(rawValue: "suv.side.rear.open.fill")

    /// 􀾸
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let taillightFog = SFSymbol(rawValue: "taillight.fog")

    /// 􀾹
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let taillightFogFill = SFSymbol(rawValue: "taillight.fog.fill")

    /// 􁔐
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let tent2 = SFSymbol(rawValue: "tent.2")

    /// 􁞄
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tent2Circle = SFSymbol(rawValue: "tent.2.circle")

    /// 􁞅
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let tent2CircleFill = SFSymbol(rawValue: "tent.2.circle.fill")

    /// 􁔑
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let tent2Fill = SFSymbol(rawValue: "tent.2.fill")

    /// 􁞂
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let tentCircle = SFSymbol(rawValue: "tent.circle")

    /// 􁞃
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let tentCircleFill = SFSymbol(rawValue: "tent.circle.fill")

    /// 􁀳
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let thermometerAndLiquidWaves = SFSymbol(rawValue: "thermometer.and.liquid.waves")

    /// 􁊁
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let thermometerTransmission = SFSymbol(rawValue: "thermometer.transmission")

    /// 􁞀
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let toiletCircle = SFSymbol(rawValue: "toilet.circle")

    /// 􁞁
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let toiletCircleFill = SFSymbol(rawValue: "toilet.circle.fill")

    /// 􁟌
    /// Single Localization, Single Layerset
    ///
    /// Layersets:
    /// - Monochrome
    static let transmission = SFSymbol(rawValue: "transmission")

    /// 􁝯
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let tree = SFSymbol(rawValue: "tree")

    /// 􁞔
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let treeCircle = SFSymbol(rawValue: "tree.circle")

    /// 􁞕
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let treeCircleFill = SFSymbol(rawValue: "tree.circle.fill")

    /// 􁝰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Multicolor (iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0)
    static let treeFill = SFSymbol(rawValue: "tree.fill")

    /// 􁞼
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let windshieldFrontAndFluidAndSpray = SFSymbol(rawValue: "windshield.front.and.fluid.and.spray")

    /// 􁀟
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let windshieldFrontAndHeatWaves = SFSymbol(rawValue: "windshield.front.and.heat.waves")

    /// 􁀕
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let windshieldFrontAndSpray = SFSymbol(rawValue: "windshield.front.and.spray")

    /// 􁞻
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let windshieldFrontAndWiperAndSpray = SFSymbol(rawValue: "windshield.front.and.wiper.and.spray")

    /// 􁉍
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let windshieldFrontAndWiperExclamationmark = SFSymbol(rawValue: "windshield.front.and.wiper.exclamationmark")

    /// 􁀖
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let windshieldFrontAndWiperIntermittent = SFSymbol(rawValue: "windshield.front.and.wiper.intermittent")

    /// 􁞾
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let windshieldRearAndFluidAndSpray = SFSymbol(rawValue: "windshield.rear.and.fluid.and.spray")

    /// 􁀤
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let windshieldRearAndHeatWaves = SFSymbol(rawValue: "windshield.rear.and.heat.waves")

    /// 􁀡
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let windshieldRearAndSpray = SFSymbol(rawValue: "windshield.rear.and.spray")

    /// 􁀣
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    static let windshieldRearAndWiperAndDrop = SFSymbol(rawValue: "windshield.rear.and.wiper.and.drop")

    /// 􁞽
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let windshieldRearAndWiperAndSpray = SFSymbol(rawValue: "windshield.rear.and.wiper.and.spray")

    /// 􁉑
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let windshieldRearAndWiperExclamationmark = SFSymbol(rawValue: "windshield.rear.and.wiper.exclamationmark")

    /// 􁀢
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let windshieldRearAndWiperIntermittent = SFSymbol(rawValue: "windshield.rear.and.wiper.intermittent")

    /// 􁕦
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let wrongwaysign = SFSymbol(rawValue: "wrongwaysign")

    /// 􁕧
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical
    /// - Multicolor
    static let wrongwaysignFill = SFSymbol(rawValue: "wrongwaysign.fill")
}
