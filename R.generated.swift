//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var infoPlist: infoPlist { .init(source: .init(bundle: bundle, tableName: "InfoPlist", preferredLanguages: preferredLanguages, locale: locale)) }

    func infoPlist(preferredLanguages: [String]) -> infoPlist {
      .init(source: .init(bundle: bundle, tableName: "InfoPlist", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.infoPlist` struct is generated, and contains static references to 1 localization keys.
    struct infoPlist {
      let source: RswiftResources.StringResource.Source

      /// en translation: Play Android
      ///
      /// Key: wanandroid
      ///
      /// Locales: en, zh-Hans
      var wanandroid: RswiftResources.StringResource { .init(key: "wanandroid", tableName: "InfoPlist", source: source, developmentValue: "Play Android", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `mainTheme`.
    var mainTheme: RswiftResources.ColorResource { .init(name: "mainTheme", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 20 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `LaunchImagePlayAndroid`.
    var launchImagePlayAndroid: RswiftResources.ImageResource { .init(name: "LaunchImagePlayAndroid", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `android`.
    var android: RswiftResources.ImageResource { .init(name: "android", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `back`.
    var back: RswiftResources.ImageResource { .init(name: "back", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `collect`.
    var collect: RswiftResources.ImageResource { .init(name: "collect", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `collect_selected`.
    var collect_selected: RswiftResources.ImageResource { .init(name: "collect_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `home`.
    var home: RswiftResources.ImageResource { .init(name: "home", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `home_selected`.
    var home_selected: RswiftResources.ImageResource { .init(name: "home_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `my`.
    var my: RswiftResources.ImageResource { .init(name: "my", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `my_selected`.
    var my_selected: RswiftResources.ImageResource { .init(name: "my_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `notFound`.
    var notFound: RswiftResources.ImageResource { .init(name: "notFound", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `project`.
    var project: RswiftResources.ImageResource { .init(name: "project", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `project_selected`.
    var project_selected: RswiftResources.ImageResource { .init(name: "project_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `publicNumber`.
    var publicNumber: RswiftResources.ImageResource { .init(name: "publicNumber", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `publicNumber_selected`.
    var publicNumber_selected: RswiftResources.ImageResource { .init(name: "publicNumber_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `saber`.
    var saber: RswiftResources.ImageResource { .init(name: "saber", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `safari`.
    var safari: RswiftResources.ImageResource { .init(name: "safari", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tree`.
    var tree: RswiftResources.ImageResource { .init(name: "tree", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tree_selected`.
    var tree_selected: RswiftResources.ImageResource { .init(name: "tree_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `user`.
    var user: RswiftResources.ImageResource { .init(name: "user", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `wan_android_placeholder`.
    var wan_android_placeholder: RswiftResources.ImageResource { .init(name: "wan_android_placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.file` struct is generated, and contains static references to 31 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `.swiftlint.yml`.
    var swiftlintYml: RswiftResources.FileResource { .init(name: ".swiftlint", pathExtension: "yml", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `AMapLocation.json`.
    var aMapLocationJson: RswiftResources.FileResource { .init(name: "AMapLocation", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `ArticleNormalList.json`.
    var articleNormalListJson: RswiftResources.FileResource { .init(name: "ArticleNormalList", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `ArticleTopList.json`.
    var articleTopListJson: RswiftResources.FileResource { .init(name: "ArticleTopList", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Banner.json`.
    var bannerJson: RswiftResources.FileResource { .init(name: "Banner", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `CollectArticleAction.json`.
    var collectArticleActionJson: RswiftResources.FileResource { .init(name: "CollectArticleAction", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Course.json`.
    var courseJson: RswiftResources.FileResource { .init(name: "Course", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `CourseDetail.json`.
    var courseDetailJson: RswiftResources.FileResource { .init(name: "CourseDetail", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Friend.json`.
    var friendJson: RswiftResources.FileResource { .init(name: "Friend", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `HotKey.json`.
    var hotKeyJson: RswiftResources.FileResource { .init(name: "HotKey", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `LoginAndRegister.json`.
    var loginAndRegisterJson: RswiftResources.FileResource { .init(name: "LoginAndRegister", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Logout.json`.
    var logoutJson: RswiftResources.FileResource { .init(name: "Logout", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `MessageCount.json`.
    var messageCountJson: RswiftResources.FileResource { .init(name: "MessageCount", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `MyCoin.json`.
    var myCoinJson: RswiftResources.FileResource { .init(name: "MyCoin", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `MyCoinList.json`.
    var myCoinListJson: RswiftResources.FileResource { .init(name: "MyCoinList", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `MyCollectList.json`.
    var myCollectListJson: RswiftResources.FileResource { .init(name: "MyCollectList", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `NavigationUrl.json`.
    var navigationUrlJson: RswiftResources.FileResource { .init(name: "NavigationUrl", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Pods-RxStudy-acknowledgements.plist`.
    var podsRxStudyAcknowledgementsPlist: RswiftResources.FileResource { .init(name: "Pods-RxStudy-acknowledgements", pathExtension: "plist", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `ProjectClassify.json`.
    var projectClassifyJson: RswiftResources.FileResource { .init(name: "ProjectClassify", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `ProjectClassifyList.json`.
    var projectClassifyListJson: RswiftResources.FileResource { .init(name: "ProjectClassifyList", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PublicNumber.json`.
    var publicNumberJson: RswiftResources.FileResource { .init(name: "PublicNumber", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `PublicNumberList.json`.
    var publicNumberListJson: RswiftResources.FileResource { .init(name: "PublicNumberList", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `README.md`.
    var readmeMd: RswiftResources.FileResource { .init(name: "README", pathExtension: "md", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `RankList.json`.
    var rankListJson: RswiftResources.FileResource { .init(name: "RankList", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `SearchResult.json`.
    var searchResultJson: RswiftResources.FileResource { .init(name: "SearchResult", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `ToCodable.json`.
    var toCodableJson: RswiftResources.FileResource { .init(name: "ToCodable", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Tools.json`.
    var toolsJson: RswiftResources.FileResource { .init(name: "Tools", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `Tree.json`.
    var treeJson: RswiftResources.FileResource { .init(name: "Tree", pathExtension: "json", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `appStore.js`.
    var appStoreJs: RswiftResources.FileResource { .init(name: "appStore", pathExtension: "js", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `grayMode.js`.
    var grayModeJs: RswiftResources.FileResource { .init(name: "grayMode", pathExtension: "js", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `open.js`.
    var openJs: RswiftResources.FileResource { .init(name: "open", pathExtension: "js", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
      try self.main.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {
        if UIKit.UIImage(named: "LaunchImagePlayAndroid", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'LaunchImagePlayAndroid' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = BaseNavigationController

      let bundle: Foundation.Bundle

      let name = "Main"
      func validate() throws {

      }
    }
  }
}